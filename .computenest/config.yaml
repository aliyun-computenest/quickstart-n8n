Service:
  RegionId: cn-hangzhou
  DeployType: ros
  DeployMetadata:
    ServiceInstanceNameRule:
      Prefix: n8n
    SupplierDeployMetadata:
      ArtifactRelation:
        'centos_7_9_x64_20G_alibase_20240403.vhd':
          ArtifactId: ${Artifact.EcsImage.ArtifactId}
          ArtifactVersion: ${Artifact.EcsImage.ArtifactVersion}
    TemplateConfigs:
      - Name: 单机版
        Url: 'ros_templates/template.yaml'
  ServiceType: private
  ServiceInfo:
    Locale: zh-CN
    ShortDescription: n8n deploy
    Image: 'resources/icons/service_logo.jpg'
Artifact:
  EcsImage:
    ArtifactType: EcsImage
    ArtifactName: n8n
    Description: n8n
    ArtifactProperty:
      RegionId: ${ImageBuilder.EcsImage.RegionId}
      ImageId: ${ImageBuilder.EcsImage.SourceImageId}
ImageBuilder:
  EcsImage:
    RegionId: ap-southeast-1
    SourceImageId: aliyun_3_x64_20G_alibase_20240819.vhd
    SystemDiskSize: 40
    InstanceType: ecs.c6.large
    InternetMaxBandwidthOut: 10
    CommandType: RunShellScript
    Timeout: 10800
    Tags: [ ]
    CommandContent: |-
        #!/bin/bash
        # 升级基础组件：
        yum check-update
        yum -y upgrade --security
        yum -y upgrade-minimal

        # 安装docker-ce
        yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
        yum makecache
        yum install -y curl git docker-ce
        mkdir -p /etc/docker/
        echo '{
            "default-address-pools": [
                {
                    "base": "10.255.0.0/16",
                    "size": 24
                }
            ]
        }' > /etc/docker/daemon.json

        prefixChinaRegion="cn-"
        region=$(curl -s http://100.100.100.200/latest/meta-data/region-id)

        if [[ ${region} == ${prefixChinaRegion}* && ${region} != "cn-hongkong" ]]; then
          echo '{
              "default-address-pools": [
                  {
                      "base": "10.255.0.0/16",
                      "size": 24
                  }
              ],
              "registry-mirrors": [
                  "https://mirrors-ssl.aliyuncs.com/"
              ]
          }' > /etc/docker/daemon.json
        fi

        sudo systemctl enable --now docker.socket
        sudo systemctl enable --now docker.service

        # 安装并启动 n8n
        mkdir -p /root/application/ && cd /root/application/
        git clone https://github.com/n8n-io/n8n-hosting.git
        cd n8n-hosting/docker-compose/withPostgresAndWorker

        wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && chmod +x /usr/bin/yq
        yq eval '.x-shared.environment += ["N8N_SECURE_COOKIE=false"]' ./docker-compose.yml -i

        docker compose up -d
        sleep 30
